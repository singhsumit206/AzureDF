{
	"name": "copydata",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_LogTable",
						"type": "DatasetReference",
						"parameters": {
							"TableName": {
								"value": "@pipeline().parameters.TableName",
								"type": "Expression"
							},
							"dbserver": {
								"value": "@pipeline().globalParameters.sqlconnection",
								"type": "Expression"
							},
							"dbname": {
								"value": "@pipeline().globalParameters.DbName",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ls_destiTesting",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Execute Pipeline1",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_Logging",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"StoreProcedureName": {
							"value": "@pipeline().parameters.SpName",
							"type": "Expression"
						},
						"DataFactory": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"Pipeline": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"RunId": {
							"value": "@pipeline().RunId",
							"type": "Expression"
						},
						"TriggerType": {
							"value": "@pipeline().TriggerType",
							"type": "Expression"
						},
						"TriggerId": {
							"value": "@pipeline().TriggerId",
							"type": "Expression"
						},
						"TriggerName": {
							"value": "@pipeline().TriggerName",
							"type": "Expression"
						},
						"TriggerTime": {
							"value": "@pipeline().TriggerTime",
							"type": "Expression"
						},
						"GroupId": {
							"value": "@pipeline().GroupId",
							"type": "Expression"
						},
						"Status": {
							"value": "@pipeline().parameters.status",
							"type": "Expression"
						},
						"Message": {
							"value": "@pipeline().parameters.message",
							"type": "Expression"
						}
					}
				}
			}
		],
		"parameters": {
			"TableName": {
				"type": "String"
			},
			"status": {
				"type": "String"
			},
			"message": {
				"type": "String"
			},
			"SpName": {
				"type": "String"
			}
		},
		"annotations": []
	}
}